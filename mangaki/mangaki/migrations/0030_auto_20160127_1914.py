# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-27 19:14
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mangaki', '0029_category'),
    ]

    operations = [
        migrations.AddField(
            model_name='work',
            name='controversy',
            field=models.FloatField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='work',
            name='nb_dislikes',
            field=models.IntegerField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='work',
            name='nb_likes',
            field=models.IntegerField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='work',
            name='nb_ratings',
            field=models.IntegerField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='work',
            name='sum_ratings',
            field=models.FloatField(blank=True, default=0),
        ),
        migrations.RunSQL(
            ["""
WITH nb AS (SELECT
        work_id,
        COUNT(CASE WHEN choice = 'favorite' THEN 1 END) AS favorites,
        COUNT(CASE WHEN choice = 'like' THEN 1 END) as likes,
        COUNT(CASE WHEN choice = 'dislike' THEN 1 END) as dislikes,
        COUNT(CASE WHEN choice = 'neutral' THEN 1 END) as neutrals,
        COUNT(CASE WHEN choice = 'willsee' THEN 1 END) as willsees,
        COUNT(CASE WHEN choice = 'wontsee' THEN 1 END) as wontsees
    FROM mangaki_rating GROUP BY work_id)
UPDATE mangaki_work
SET
    nb_likes = nb.likes,
    nb_dislikes = nb.dislikes,
    sum_ratings = 5.*nb.favorites+2.5*nb.likes-2.*nb.dislikes-0.1*nb.neutrals+0.5*nb.willsees-0.5*nb.wontsees,
    nb_ratings = nb.favorites + nb.likes + nb.dislikes + nb.neutrals,
    controversy = CASE
        WHEN nb.likes = 0 OR nb.dislikes = 0 THEN 0
        ELSE (nb.likes + nb.dislikes)::float ^ LEAST(nb.likes::float / nb.dislikes::float, nb.dislikes::float / nb.likes::float)
    END
FROM nb WHERE nb.work_id = mangaki_work.id;
""",
             "CREATE INDEX mangaki_work_random ON mangaki_work (category_id) WHERE nb_dislikes <= 17 AND nb_likes >= ((nb_dislikes * 3.0)) AND nb_ratings >= 28;",
            ],
            "DROP INDEX IF EXISTS mangaki_work_random;"
        ),
        migrations.AlterIndexTogether(
            name='work',
            index_together=set([('category', 'nb_ratings'), ('category', 'controversy')]),
        ),
    ]
