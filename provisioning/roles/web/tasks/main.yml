---
- include: create_users.yml
  become: true
  become_user: root

- include: install_packages.yml
  become: true
  become_user: root
  tags: packages

- include: setup_supervisor.yml
  become: true
  become_user: root
  tags: deploy

- include: setup_systemd.yml
  become: true
  become_user: root
  tags: deploy

- name: Create static root
  become: true
  become_user: root
  file:
    path: "{{ static_root }}"
    state: directory
    owner: "{{ web_user }}"
    group: "{{ web_group }}"
    mode: 0755


- include: setup_git.yml
  become: true
  become_user: "{{ web_user }}"
  tags: deploy, repository

# Set up non-root elements using `web_user`
- block:
    - name: Ensure virtualenv exists # workaround: https://github.com/ansible/ansible-modules-core/issues/5458
      command: virtualenv --python=python3 --system-site-packages "{{ virtualenv_path }}"
      args:
        creates: "{{ virtualenv_path }}/bin/python3"
      tags: packages

    - name: Upgrade pip executable in the virtualenv
      command: "{{ virtualenv_path }}/bin/pip install --upgrade pip"
      register: result
      changed_when: '"installing" in result.stdout.lower()'
      tags: packages

    - name: Install pip requirements
      command: "{{ virtualenv_path }}/bin/pip install -r {{ requirements_file }}"
      register: result
      changed_when: '"installing" in result.stdout.lower()'
      tags: packages

    - name: Install gunicorn
      command: "{{ virtualenv_path }}/bin/pip install gunicorn"
      register: result
      changed_when: '"installing" in result.stdout.lower()'
      tags: packages,deploy

    - name: Copy settings.ini
      template:
        src: settings.ini.j2
        dest: "{{ git_dest }}/mangaki/settings.ini"
        mode: 0600
        owner: "{{ web_user }}"
        group: "{{ web_group }}"
        backup: true

    - name: Initialize database
      django_manage:
        command: "migrate"
        app_path: "{{ git_dest }}/mangaki"
        virtualenv: "{{ virtualenv_path }}"

    - name: Collect static files
      django_manage:
        command: "collectstatic"
        app_path: "{{ git_dest }}/mangaki"
        virtualenv: "{{ virtualenv_path }}"

  become: true
  become_user: "{{ web_user }}"

# Workaround for https://github.com/Supervisor/supervisor/issues/121
- name: Restart supervisor
  service: name=supervisor state=restarted
  become: true
  become_user: root

- name: Run Mangaki application server (gunicorn)
  supervisorctl:
    name: mangaki
    state: started
  become: true
  become_user: root
